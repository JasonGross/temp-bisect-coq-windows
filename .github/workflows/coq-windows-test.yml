name: CI (Coq Build, Windows)

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 1 * *'

jobs:
  build:

    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        coq_version: ["5001deed21e8f4027411cc6413a9d2b98e1bccee", "5001deed21e8f4027411cc6413a9d2b98e1bccee", "5001deed21e8f4027411cc6413a9d2b98e1bccee", "5001deed21e8f4027411cc6413a9d2b98e1bccee", "5001deed21e8f4027411cc6413a9d2b98e1bccee", "dc723c2aa614e6b31ef5a4c9764ff92c0860880e", "dc723c2aa614e6b31ef5a4c9764ff92c0860880e", "dc723c2aa614e6b31ef5a4c9764ff92c0860880e", "dc723c2aa614e6b31ef5a4c9764ff92c0860880e", "dc723c2aa614e6b31ef5a4c9764ff92c0860880e"]

    env:
      NJOBS: "2"
      COQ_VERSION: ${{ matrix.coq_version }}

    # initial steps copied from https://github.com/coq/coq/blob/76d8a38a4591c604795c5429ffcbbe9daaa8945d/azure-pipelines.yml#L9-L39
    steps:
    - uses: actions/checkout@v2
    - name: submodules-init
      uses: snickerbockers/submodules-init@v4
    - name: Download cygwin
      run: |
        & cmd /c 'nslookup www.cygwin.com 2>&1'
        while ($true)
        {
            try
            {
                (New-Object Net.WebClient).DownloadFile('http://www.cygwin.com/setup-x86_64.exe', 'setup-x86_64.exe')
                break
            }
            catch
            {
                Write-Host "There is an error during package downloading:`n $_"
            }
        }
        & cmd /c 'nslookup www.cygwin.com 8.8.8.8 2>&1'
      shell: powershell
    - name: Install cygwin
      run: |
        @ECHO ON
        SET CYGROOT=C:\cygwin64
        SET CYGCACHE=%CYGROOT%\var\cache\setup
        setup-x86_64.exe -qnNdO -R %CYGROOT% -l %CYGCACHE% -s %CYGMIRROR% -P rsync -P patch -P diffutils -P make -P unzip -P m4 -P findutils -P time -P wget -P curl -P git -P mingw64-x86_64-binutils,mingw64-x86_64-gcc-core,mingw64-x86_64-gcc-g++,mingw64-x86_64-pkg-config,mingw64-x86_64-windows_default_manifest -P mingw64-x86_64-headers,mingw64-x86_64-runtime,mingw64-x86_64-pthreads,mingw64-x86_64-zlib -P python3 -P python2
        SET TARGET_ARCH=x86_64-w64-mingw32
        SET CD_MFMT=%cd:\=/%
        SET RESULT_INSTALLDIR_CFMT=%CD_MFMT:C:/=/cygdrive/c/%
      env:
        CYGMIRROR: "http://mirror.easyname.at/cygwin"
      shell: cmd

    - name: Clone Coq
      run: |
        C:\cygwin64\bin\bash -l -c 'git clone "https://github.com/coq/coq.git"'
        C:\cygwin64\bin\bash -l -c 'cd coq; git checkout ${COQ_VERSION}; git log --max-count=1'
      shell: cmd

    - name: Set up cygwin profile
      run: |
        C:\cygwin64\bin\bash -l coq\dev\build\windows\configure_profile.sh
      shell: cmd

    - name: Install opam
      run: |
        C:\cygwin64\bin\bash -l coq\dev\ci\azure-opam.sh
      shell: cmd

    - name: echo build params
      run: |
        ECHO ::group::wmic cpu get caption, deviceid, name, numberofcores, maxclockspeed, status
        wmic cpu get caption, deviceid, name, numberofcores, maxclockspeed, status
        ECHO ::endgroup::
        ECHO ::group::wmic cpu list /format:list
        wmic cpu list /format:list
        ECHO ::endgroup::
        ECHO ::group::git config -l
        C:\cygwin64\bin\bash -l -c 'git config -l'
        ECHO ::endgroup::
        ECHO ::group::git config --global -l
        C:\cygwin64\bin\bash -l -c 'git config --global -l'
        ECHO ::endgroup::
        ECHO ::group::ocamlc -config
        C:\cygwin64\bin\bash -l -c 'ocamlc -config'
        ECHO ::endgroup::
        ECHO ::group::PATH
        C:\cygwin64\bin\bash -l -c 'cd "%cd%"; echo "${PATH}"'
        ECHO ::endgroup::
      shell: cmd

    - name: Bisect
      run: |
        ECHO ::group::Starting build
        C:\cygwin64\bin\bash -l -c 'cd coq; "%cd%/coq-build.sh"'
        ECHO ::endgroup::
      shell: cmd
